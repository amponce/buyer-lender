generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            String         @id
  email         String         @unique
  password      String
  role          String         @default("BUYER")
  isManager     Boolean        @default(false)
  teamId        String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  messages      Message[]      // Messages sent by this user
  lenderMessages Message[]     @relation("MessageLender") // Messages where this user is the lender
  quotes        Quote[]        @relation("LenderQuotes")
  quoteRequests QuoteRequest[]
  team          User?          @relation("TeamMembers", fields: [teamId], references: [id])
  members       User[]         @relation("TeamMembers")
}

model QuoteRequest {
  id                   String    @id @default(uuid())
  userId               String
  creditScore          Int
  annualIncome         Float
  additionalIncome     Float
  monthlyCarLoan       Float
  monthlyCreditCard    Float
  monthlyOtherExpenses Float
  purchasePrice        Float
  propertyAddress      String?
  propertyState        String
  propertyZipCode      String
  status               String    @default("PENDING")
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  messages             Message[]
  quotes               Quote[]
  user                 User      @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Quote {
  id              String       @id @default(uuid())
  quoteRequestId  String
  lenderId        String
  interestRate    Float
  loanTerm        Int
  monthlyPayment  Float
  additionalNotes String?
  status          String       @default("PENDING")
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  lender          User         @relation("LenderQuotes", fields: [lenderId], references: [id])
  quoteRequest    QuoteRequest @relation(fields: [quoteRequestId], references: [id])

  @@index([quoteRequestId])
  @@index([lenderId])
}

model Message {
  id           String       @id @default(uuid())
  requestId    String
  senderId     String
  lenderId     String
  content      String
  createdAt    DateTime     @default(now())
  sender       User         @relation(fields: [senderId], references: [id])
  quoteRequest QuoteRequest @relation(fields: [requestId], references: [id])
  lender       User         @relation("MessageLender", fields: [lenderId], references: [id])

  @@index([requestId])
  @@index([senderId])
  @@index([lenderId])
}
